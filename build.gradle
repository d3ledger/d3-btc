buildscript {
    ext.kotlin_version = '1.3.21'
    ext.ktor_version = '1.0.0'
    ext.notary_version = '33f8b3545f35ffc7fc7488cc6e31076096e43a61'
    ext.chain_adapter_client_version = '0dccefacf28b75b9e52022d785f57fe9f41638ae'
    ext.reverse_chain_adapter_version = '83162b66c99b2821be326477e9c78a2c5e50efeb'
    repositories {
        mavenCentral()
        jcenter()
        // gradle plugins repository
        gradlePluginPortal()
    }
    configurations.maybeCreate("pitest")
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'
    }
}

plugins {
    id "org.sonarqube" version "2.7.1"
    id "com.github.dolgopolovwork.testreport" version "1"
}

group = 'd3'
version = '1.0-SNAPSHOT'

apply plugin: "jacoco"
apply plugin: 'com.github.johnrengelman.shadow'

testReport {
    testFolders = Arrays.asList("notary-btc-integration-test")
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    repositories {
        mavenCentral()
        // for Ktor
        jcenter()
        maven { url = 'https://dl.bintray.com/kotlin/ktor' }
        maven { url 'https://jitpack.io' }
    }
}

sourceCompatibility = 1.8

allprojects {
    dependencies {
        // unit tests
        testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        // https://mvnrepository.com/artifact/org.mockito/mockito-all
        testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
        testCompile('com.nhaarman:mockito-kotlin:1.5.0') {
            exclude group: 'org.jetbrains.kotlin'
            exclude group: 'org.mockito'
        }

        // for setting env variables in tests
        testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.18.0'
        // to run both junit4 and junit5 tests
        testRuntime("org.junit.vintage:junit-vintage-engine:5.2.0")
    }
}

allprojects {
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

allprojects {
    sonarqube {
        properties {
            property "sonar.github.repository", "d3ledger/d3-btc"
            property "sonar.projectKey", "d3:d3-btc"
            property "sonar.java.binaries", "${project.projectDir}/build/classes"
            property "sonar.java.libraries", "${project.projectDir}/build/libs"
            property "sonar.java.test.binaries", "${project.projectDir}/build/test-results/test/binary"
            property "sonar.exclusions", "notary-btc-integration-test/**"
            property "sonar.jacoco.reportPaths", "${project.projectDir}/build/jacoco/test.exec"
        }
    }
}

jacocoTestReport {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/coverage.xml")
        csv.enabled false
        html.enabled false
        html.destination file("${buildDir}/reports/html")
    }

    dependsOn(test)
}
